openapi: 3.0.2
info:
  title: GobloG
  description: My first go project
  version: v1.0
servers:
  - url: /api/v1
tags:
  - name: posts
  - name: comments
components:
  schemas:
    Uuid:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    AuthorName:
      type: string
      minLength: 1
      maxLength: 128
    PostContent:
      type: string
      minLength: 1
      maxLength: 8096
    CommentContent:
      type: string
      minLength: 1
      maxLength: 1024
    Date:
      type: string
      format: date-time
    DateFromUser:
      type: string
      description: Default is the current date
      format: date-time
    PostSeed:
      type: object
      required:
        - authorName
        - content
      properties:
        postId:
          $ref: '#/components/schemas/Uuid'
        authorName:
          $ref: '#/components/schemas/AuthorName'
        content:
          $ref: '#/components/schemas/PostContent'
        postedAt:
          $ref: '#/components/schemas/DateFromUser'
      additionalProperties: false
    Post:
      type: object
      required:
        - postId
        - authorName
        - content
        - postedAt
      properties:
        postId:
          $ref: '#/components/schemas/Uuid'
        authorName:
          $ref: '#/components/schemas/AuthorName'
        content:
          $ref: '#/components/schemas/PostContent'
        postedAt:
          $ref: '#/components/schemas/Date'
      additionalProperties: false
    CommentSeed:
      type: object
      required:
        - postId
        - authorName
        - content
      properties:
        commentId:
          $ref: '#/components/schemas/Uuid'
        postId:
          $ref: '#/components/schemas/Uuid'
        authorName:
          $ref: '#/components/schemas/AuthorName'
        content:
          $ref: '#/components/schemas/CommentContent'
        commentedAt:
          $ref: '#/components/schemas/DateFromUser'
      additionalProperties: false
    Comment:
      type: object
      required:
        - commentId
        - postId
        - authorName
        - content
        - commentedAt
      properties:
        commentId:
          $ref: '#/components/schemas/Uuid'
        postId:
          $ref: '#/components/schemas/Uuid'
        authorName:
          $ref: '#/components/schemas/AuthorName'
        content:
          $ref: '#/components/schemas/CommentContent'
        commentedAt:
          $ref: '#/components/schemas/Date'
      additionalProperties: false
  parameters:
    PostIdPath:
      name: postId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
    CommentIdPath:
      name: postId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
  responses:
    400:
      description: Client Error
paths:
  /posts:
    get:
      tags: ['posts']
      operationId: GetPosts
      responses:
        200:
          description: 'Successful list of posts'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      tags: ['posts']
      operationId: CreateOnePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSeed'
      responses:
        200:
          description: Successful post
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        400:
          $ref: '#/components/responses/400'

  /posts/{postId}:
    parameters:
      - $ref: '#/components/parameters/PostIdPath'
    delete:
      tags: ['posts']
      operationId: DeleteOnePost
      responses:
        200:
          description: Deleted post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

  /posts/{postId}/comments:
    parameters:
      - $ref: '#/components/parameters/PostIdPath'
    post:
      tags: ['comments']
      operationId: CreateOneComment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentSeed'
      responses:
        200:
          description: Created comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    get:
      tags: ['comments']
      operationId: GetCommentsForPost
      responses:
        200:
          description: Comment list for post
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
  /comments/{commentId}:
    parameters:
      - $ref: '#/components/parameters/CommentIdPath'
    delete:
      tags: ['comments']
      operationId: DeleteOneComment
      responses:
        200:
          description: Deleted comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'


